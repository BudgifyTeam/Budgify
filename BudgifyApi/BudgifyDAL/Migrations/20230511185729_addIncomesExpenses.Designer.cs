// <auto-generated />
using System;
using BudgifyDal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BudgifyDal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230511185729_addIncomesExpenses")]
    partial class addIncomesExpenses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BudgifyModels.Budget", b =>
                {
                    b.Property<int>("Budget_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Budget_id"));

                    b.Property<int>("Users_id")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasMaxLength(8)
                        .HasColumnType("integer");

                    b.HasKey("Budget_id");

                    b.HasIndex("Users_id");

                    b.ToTable("budget");
                });

            modelBuilder.Entity("BudgifyModels.Category", b =>
                {
                    b.Property<int>("Category_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Category_id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Users_id")
                        .HasColumnType("integer");

                    b.HasKey("Category_id");

                    b.HasIndex("Users_id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("BudgifyModels.Expense", b =>
                {
                    b.Property<int>("Expense_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Expense_id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Pocket_id")
                        .HasColumnType("integer");

                    b.Property<int>("Users_id")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasMaxLength(8)
                        .HasColumnType("integer");

                    b.Property<int>("Wallet_id")
                        .HasColumnType("integer");

                    b.HasKey("Expense_id");

                    b.HasIndex("Pocket_id");

                    b.HasIndex("Users_id");

                    b.HasIndex("Wallet_id");

                    b.ToTable("expenses");
                });

            modelBuilder.Entity("BudgifyModels.Income", b =>
                {
                    b.Property<int>("Income_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Income_id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Users_id")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasMaxLength(8)
                        .HasColumnType("integer");

                    b.HasKey("Income_id");

                    b.HasIndex("Users_id");

                    b.ToTable("incomes");
                });

            modelBuilder.Entity("BudgifyModels.Pocket", b =>
                {
                    b.Property<int>("Pocket_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Pocket_id"));

                    b.Property<double>("Goal")
                        .HasMaxLength(8)
                        .HasColumnType("double precision");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<double>("Total")
                        .HasMaxLength(8)
                        .HasColumnType("double precision");

                    b.Property<int>("Users_id")
                        .HasColumnType("integer");

                    b.HasKey("Pocket_id");

                    b.HasIndex("Users_id");

                    b.ToTable("pockets");
                });

            modelBuilder.Entity("BudgifyModels.Wallet", b =>
                {
                    b.Property<int>("Wallet_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Wallet_id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<double>("Total")
                        .HasMaxLength(8)
                        .HasColumnType("double precision");

                    b.Property<int>("Users_id")
                        .HasColumnType("integer");

                    b.HasKey("Wallet_id");

                    b.HasIndex("Users_id");

                    b.ToTable("wallets");
                });

            modelBuilder.Entity("BudgifyModels.user", b =>
                {
                    b.Property<int>("Users_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Users_id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("PublicAccount")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Users_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("BudgifyModels.Budget", b =>
                {
                    b.HasOne("BudgifyModels.user", "User")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgifyModels.Category", b =>
                {
                    b.HasOne("BudgifyModels.user", "User")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgifyModels.Expense", b =>
                {
                    b.HasOne("BudgifyModels.Pocket", "Pocket")
                        .WithMany()
                        .HasForeignKey("Pocket_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgifyModels.user", "User")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgifyModels.Pocket", "Wallet")
                        .WithMany()
                        .HasForeignKey("Wallet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pocket");

                    b.Navigation("User");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BudgifyModels.Income", b =>
                {
                    b.HasOne("BudgifyModels.user", "User")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgifyModels.Pocket", b =>
                {
                    b.HasOne("BudgifyModels.user", "User")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgifyModels.Wallet", b =>
                {
                    b.HasOne("BudgifyModels.user", "User")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
