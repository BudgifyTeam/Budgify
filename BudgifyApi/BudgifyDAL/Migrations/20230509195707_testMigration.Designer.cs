// <auto-generated />
using System;
using BudgifyDal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BudgifyDal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230509195707_testMigration")]
    partial class testMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BudgifyModels.Budget", b =>
                {
                    b.Property<int>("budget_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("budget_id"));

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.Property<int>("value")
                        .HasMaxLength(8)
                        .HasColumnType("integer");

                    b.HasKey("budget_id");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("budgets");
                });

            modelBuilder.Entity("BudgifyModels.Category", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("category_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("category_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BudgifyModels.Expense", b =>
                {
                    b.Property<int>("expense_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("expense_id"));

                    b.Property<int>("category_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("pocket_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.Property<int>("value")
                        .HasMaxLength(8)
                        .HasColumnType("integer");

                    b.Property<int>("wallet_id")
                        .HasColumnType("integer");

                    b.HasKey("expense_id");

                    b.HasIndex("category_id");

                    b.HasIndex("pocket_id");

                    b.HasIndex("user_id");

                    b.HasIndex("wallet_id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("BudgifyModels.Income", b =>
                {
                    b.Property<int>("income_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("income_id"));

                    b.Property<int>("category_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("pocket_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.Property<int>("value")
                        .HasMaxLength(8)
                        .HasColumnType("integer");

                    b.Property<int>("wallet_id")
                        .HasColumnType("integer");

                    b.HasKey("income_id");

                    b.HasIndex("category_id");

                    b.HasIndex("pocket_id");

                    b.HasIndex("user_id");

                    b.HasIndex("wallet_id");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("BudgifyModels.Pocket", b =>
                {
                    b.Property<int>("pocket_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("pocket_id"));

                    b.Property<double>("goal")
                        .HasMaxLength(8)
                        .HasColumnType("double precision");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<double>("total")
                        .HasMaxLength(8)
                        .HasColumnType("double precision");

                    b.HasKey("pocket_id");

                    b.ToTable("Pockets");
                });

            modelBuilder.Entity("BudgifyModels.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool?>("PublicAccount")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("user_id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("BudgifyModels.Wallet", b =>
                {
                    b.Property<int>("wallet_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("wallet_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<double?>("total")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("double precision");

                    b.HasKey("wallet_id");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("BudgifyModels.Budget", b =>
                {
                    b.HasOne("BudgifyModels.User", "user")
                        .WithOne("budget")
                        .HasForeignKey("BudgifyModels.Budget", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("BudgifyModels.Expense", b =>
                {
                    b.HasOne("BudgifyModels.Category", "category")
                        .WithMany("Expenses")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgifyModels.Pocket", "pocket")
                        .WithMany("Expenses")
                        .HasForeignKey("pocket_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgifyModels.User", "user")
                        .WithMany("expenses")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgifyModels.Wallet", "wallet")
                        .WithMany("Expenses")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("pocket");

                    b.Navigation("user");

                    b.Navigation("wallet");
                });

            modelBuilder.Entity("BudgifyModels.Income", b =>
                {
                    b.HasOne("BudgifyModels.Category", "category")
                        .WithMany("Incomes")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgifyModels.Pocket", null)
                        .WithMany("Incomes")
                        .HasForeignKey("pocket_id");

                    b.HasOne("BudgifyModels.User", "user")
                        .WithMany("incomes")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgifyModels.Wallet", "wallet")
                        .WithMany("Incomes")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("user");

                    b.Navigation("wallet");
                });

            modelBuilder.Entity("BudgifyModels.Category", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("BudgifyModels.Pocket", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("BudgifyModels.User", b =>
                {
                    b.Navigation("budget")
                        .IsRequired();

                    b.Navigation("expenses");

                    b.Navigation("incomes");
                });

            modelBuilder.Entity("BudgifyModels.Wallet", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Incomes");
                });
#pragma warning restore 612, 618
        }
    }
}
